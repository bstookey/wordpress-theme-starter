/* ===========================================================
   MIXINS & EXTENDS
=========================================================== */
%clearfix {
    &:after {
        content: ".";
        display: block;
        clear: both;
        height: 0;
        overflow: hidden;
        visibility: hidden;
    }
    .lte-ie8 & {
        zoom: 1;
    }
}

@mixin hide-text {
    overflow: hidden;
    text-indent: -9999px;
}

@mixin linear-gradient($direction, $color1, $offset1, $color2, $offset2) {
    $angle_webkit: 'left top, left bottom';
    $angle_old: 'top';
    @if $direction == 'to right' {
        $angle_webkit: 'left top, right top';
        $angle_old: 'left';
    }
    background: $color1;
    background-image:    -moz-linear-gradient(#{$angle_old}, #{$color1} #{$offset1}, #{$color2} #{$offset2});
    background-image:        -webkit-gradient(linear, #{$angle_webkit}, color-stop(#{$offset1}, #{$color1}), color-stop(#{$offset2}, #{$color2}));
    background-image: -webkit-linear-gradient(#{$angle_old}, #{$color1} #{$offset1}, #{$color2} #{$offset2});
    background-image:      -o-linear-gradient(#{$angle_old}, #{$color1} #{$offset1}, #{$color2} #{$offset2});
    background-image:     -ms-linear-gradient(#{$angle_old}, #{$color1} #{$offset1}, #{$color2} #{$offset2});
    background-image:         linear-gradient(#{$direction}, #{$color1} #{$offset1}, #{$color2} #{$offset2});
    .lte-ie9 & {
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color1}', endColorstr='#{$color2}', GradientType=0);
    }
}

@mixin linear-gradient-svg($direction, $color1, $offset1, $color2, $offset2) {
    $color1css: '#'+$color1+'';
    $color2css: '#'+$color2+'';
    $offset1css: ''+$offset1+'%';
    $offset2css: ''+$offset2+'%';
    $color1svg: '%3cstop%20style%3d%22stop%2dcolor%3a%23'+$color1+'%22%20offset%3d%22'+$offset1+'%25%22%2f%3e';
    $color2svg: '%3cstop%20style%3d%22stop%2dcolor%3a%23'+$color2+'%22%20offset%3d%22'+$offset2+'%25%22%2f%3e';
    $angle_webkit: 'left top, left bottom';
    $angle_old: 'top';
    $angle_svg: '%20x2%3d%220%25%22%20y2%3d%22100%25%22';
    @if $direction == 'to right' {
        $angle_webkit: 'left top, right top';
        $angle_svg: '%20x2%3d%22100%25%22';
        $angle_old: 'left';
    }

    background: $color1css;
    background-image: url(data:image/svg+xml,%3c%3fxml%20version%3d%221%2e0%22%3f%3e%3csvg%20xmlns%3d%22http%3a%2f%2fwww%2ew3%2eorg%2f2000%2fsvg%22%20width%3d%22100%25%22%20height%3d%22100%25%22%3e%3cdefs%3e%3clinearGradient%20id%3d%22G%22#{$angle_svg}%3e#{$color1svg}#{$color2svg}%3c%2flinearGradient%3e%3c%2fdefs%3e%3crect%20width%3d%22100%25%22%20height%3d%22100%25%22%20fill%3d%22url%28%23G%29%22%2f%3e%3c%2fsvg%3e);
    background-image:    -moz-linear-gradient(#{$angle_old}, #{$color1css} #{$offset1css}, #{$color2css} #{$offset2css});
    background-image:        -webkit-gradient(linear, #{$angle_webkit}, color-stop(#{$offset1css}, #{$color1css}), color-stop(#{$offset2css}, #{$color2css}));
    background-image: -webkit-linear-gradient(#{$angle_old}, #{$color1css} #{$offset1css}, #{$color2css} #{$offset2css});
    background-image:      -o-linear-gradient(#{$angle_old}, #{$color1css} #{$offset1css}, #{$color2css} #{$offset2css});
    background-image:     -ms-linear-gradient(#{$angle_old}, #{$color1css} #{$offset1css}, #{$color2css} #{$offset2css});
    background-image:         linear-gradient(#{$direction}, #{$color1css} #{$offset1css}, #{$color2css} #{$offset2css});
    .lte-ie8 & {
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color1css}', endColorstr='#{$color2css}', GradientType=0);
    }
}
@mixin placeholder {
    &::-webkit-input-placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
}
@mixin button($color: $c-white, $bg: $c-green, $border-width: 1px, $border-type: solid, $border-color: #000, $font-weight: 400, $font-size: 18px, $text-transform: uppercase, $display: inline-block, $padding: 9px 20px){
    font-weight: $font-weight;
    font-size: $font-size;
    color: $color;
    background: $bg;
    border: $border-width $border-type $border-color;
    text-transform: $text-transform;
    display: $display;
    padding: $padding;
    &:hover{
        color: #fff;
        background: $border-color;
    }
    &:focus{
        outline: none;
    }
}
@mixin border-radius($border-radius) {
    -webkit-border-radius: $border-radius;
    -moz-border-radius: $border-radius;
    -o-border-radius: $border-radius;
    border-radius: $border-radius;
}
@mixin transition($prop, $time, $ease: ease) {
    -webkit-transition: $prop $time $ease;
    -moz-transition: $prop $time $ease;
    -o-transition: $prop $time $ease;
    transition: $prop $time $ease;
} /*ex: @include transition(color, 0.1s); */

@mixin boxsize {
    -moz-box-sizing:    border-box;   /* Firefox 1, probably can drop this */
    -webkit-box-sizing: border-box;   /* Safari 3-4, also probably droppable */
    box-sizing:        border-box;   /* Everything else */
}

@mixin bp($point) {
    @media (max-width: $point) { @content; }
}

@mixin bpmin($point) {
    @media (min-width: $point) { @content; }
}

@mixin title($color: null, $bg: null, $font-weight: null, $font-size: null, $font-family: null, $text-transform: null, $display: block, $lh: null){
    @if $font-weight {
        font-weight: $font-weight;
    }
    @if $font-size{
        font-size: $font-size;
    }
    @if $font-family{
        font-family: $font-family;
    }
    @if $color{
        color: $color;
    }
    @if $bg{
        background: $bg;
    }
    @if $text-transform{
        text-transform: $text-transform;
    }
    @if $lh{
        line-height: $lh;
    }
    display: $display;
}

@mixin valign {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -o-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

@mixin transform($prop){
    -webkit-transform: $prop;
    -moz-transform: $prop;
    -o-transform: $prop;
    -ms-transform: $prop;
    transform: $prop;
}

@mixin box-shadow($prop){
    box-shadow: $prop;
    -moz-box-shadow: $prop;
    -webkit-box-shadow: $prop;
}

@function rem($pxval, $base: 16) {
    @return ($pxval / $base) * 1rem;
}